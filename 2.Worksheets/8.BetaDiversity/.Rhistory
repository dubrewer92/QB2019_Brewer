doubs.varpart <- varpart(fish.db, env.mod, space.mod)
doubs.varpart
par(mar = c(2,2,2,2))
plot(doubs.varpart)
text(1,0.25, "Space")
text(0, 0.25, "Env")
mtext("Variation Partitioning of Doubs Fish Diversity")
adonis(fish ~ quality, method = "bray", permutations = 999)
Jelly <- read.csv("JellyBeanSampleData.csv")
View(Samples)
SiteA <- Jelly$Group[A]
SiteA <- Jelly$Group[Group$A]
SiteA <- Jelly$Group$A
Jelly
SiteA <- Jelly$Group
SiteA
SiteA <- Jelly[Group = "A"]
SiteA <- Jelly[Group == "A"]
SiteA <- Jelly[Jelly$Group == "A"]
SiteA
SiteA <- Jelly$Group[Jelly$Group == "A"]
SiteA
SiteA <- Jelly$Sour.Cherry[Jelly$Group == "A"]
SiteA
SiteA <- Jelly$Sour.Cherry:JewelCreamSoda[Jelly$Group == "A"]
SiteA <- Jelly$Sour.Cherry:JewelCreamSoda[Jelly$Group == "A"]
SiteA <- Jelly$Sour.Cherry:$JewelCreamSoda[Jelly$Group == "A"]
SiteA <- Jelly$Sour.Cherry:ApplePie[Jelly$Group == "A"]
PopA <- read.csv("JellyBeanSampleDataA2")
PopA <- read.csv("JellyBeanSampleDataA2.csv")
PopA
PopB <- read.csv("JellyBeanSampleDataB2.csv")
PopB
adonis(PopA ~ PopB, method = "bray", permutations = 999)
PopB < as.vector(PopB)
PopB <- read.csv("JellyBeanSampleDataB2.csv")
PopB
adonis(PopA ~ PopB, method = "bray", permutations = 999)
PopB <- as.factor(PopB)
PopB
adonis(PopA ~ PopB, method = "bray", permutations = 999)
PopA <- as.factor(PopA)
adonis(PopA ~ PopB, method = "bray", permutations = 999)
PopA <- as.data.frame(PopA)
PopA
PopB <- as.data.frame(PopB)
PopB
adonis(PopA ~ PopB, method = "bray", permutations = 999)
str(PopA)
PopA <- unlist(PopA)
PopA
PopB <- unlist(PopB)
PopB
adonis(PopA ~ PopB, method = "bray", permutations = 999)
PopA <- read.csv("JellyBeanSampleDataA2.csv")
rm(PopA)
PopA <- as.data.frame("JellyBeanSampleDataA2.csv")
PopA
PopA <- read.csv("JellyBeanSampleDataA2.csv")
PopA
rm(PopB)
PopB
PopB <- read.csv("JellyBeanSampleDataB2.csv")
PopB
adonis(PopA ~ PopB, method = "bray", permutations = 999)
PopA <- unlist(A)
PopA <- unlist(PopA)
PopA
rm(PopA)
fish
str(fish)
str(PopA)
PopA <- read.csv("JellyBeanSampleDataA2.csv")
str(PopA)
PopA <- lapply(PopA)
PopA <- lapply(PopA, as.numeric)
str(PopA)
PopB <- lapply(PopB, as.numeric)
adonis(PopA ~ PopB, method = "bray", permutations = 999)
str(PopB)
adonis(PopA ~ PopB, method = "bray", permutations = 999)
adonis(PopB ~ PopA, method = "bray", permutations = 999)
PopB <- unlist(PopB)
str(PopB)
PopB
PopA <- unlist(PopA)
adonis(PopB ~ PopA, method = "bray", permutations = 999)
Jelly <- read.csv("JellyBeanSampleData.csv")
Site <- c(rep("A", 5), rep("B", 4))
adonis(Jelly ~ Site, method = "bray", permutations = 999)
Site <- c(rep("A", 5), rep("B", 4))
Jelly <- read.csv("JellyBeanSampleData.csv")
Jelly
str(Jelly)
Jelly <- lapply(Jelly, as.numeric)
str(Site)
adonis(Jelly ~ Site, method = "bray", permutations = 999)
str(quality)
str(fish)
str(Jelly)
Jelly <- as.data.frame(Jelly)
str(Jelly)
adonis(Jelly ~ Site, method = "bray", permutations = 999)
Woolly <- read.csv("hf085-01-bird.csv")
Woolly.db <- vegdist(Woolly, method = "bray")
str(Woolly)
Woolly.db <- vegdist(Woolly, method = "bray")
Woolly
Woolly <- [,3:51]
Woolly <- [ ,3:51]
Woolly <- Woolly[,3:51]
Woolly.db <- vegdist(Woolly, method = "bray")
Woolly
Woolly.pcoa <- cmdscale(Woolly.db, eig = TRUE, k = 3)
Woolly.pcoa
plainvar1 <- round(Woolly.pcoa$eig[1] / sum(Woolly.pcoa$eig), 3) * 100
plainvar2 <- round(Woolly.pcoa$eig[2] / sum(Woolly.pcoa$eig), 3) * 100
plainvar3 <- round(Woolly.pcoa$eig[3] / sum(Woolly.pcoa$eig), 3) * 100
sum.eigA <- sum(plainvar1, plainvar2, plainvar3)
sum.EigA
sum.EigA <- sum(plainvar1, plainvar2, plainvar3)
sum.EigA
plainvar1 <- round(Woolly.pcoa$eig[1] / sum(Woolly.pcoa$eig), 3) * 100
plainvar2 <- round(Woolly.pcoa$eig[2] / sum(Woolly.pcoa$eig), 3) * 100
plainvar3 <- round(Woolly.pcoa$eig[3] / sum(Woolly.pcoa$eig), 3) * 100
sum.EigA <- sum(plainvar1, plainvar2, plainvar3)
sum.EigA
#To do ordination, first define plot parameters
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = row.names(Woolly.pcoa$points))
Woolly.pcoa
Woolly <- read.csv("hf085-01-bird.csv")
Woolly.db <- vegdist(Woolly[,3:51], method = "bray")
Woolly.pcoa <- cmdscale(Woolly.db, eig = TRUE, k = 3)
Woolly.pcoa
Woolly <- read.csv("hf085-01-bird.csv")
Woolly <- Woolly[,3:51]
Woolly
Woolly.db <- vegdist(Woolly[,3:51], method = "bray")
Woolly <- Woolly
Woolly.db <- vegdist(Woolly[,3:51], method = "bray")
Woolly <- Woolly
Woolly
Woolly.db <- vegdist(Woolly[,3:51], method = "bray")
Woolly.db <- vegdist(Woolly[,3:50], method = "bray")
Woolly.db <- vegdist(Woolly, method = "bray")
Woolly.pcoa <- cmdscale(Woolly.db, eig = TRUE, k = 3)
Woolly.pcoa
plainvar1 <- round(Woolly.pcoa$eig[1] / sum(Woolly.pcoa$eig), 3) * 100
plainvar2 <- round(Woolly.pcoa$eig[2] / sum(Woolly.pcoa$eig), 3) * 100
plainvar3 <- round(Woolly.pcoa$eig[3] / sum(Woolly.pcoa$eig), 3) * 100
sum.EigA <- sum(plainvar1, plainvar2, plainvar3)
sum.EigA
#To do ordination, first define plot parameters
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = row.names(Woolly$mortality), col = "black")
Woolly <- read.csv("hf085-01-bird.csv")
Woolly <- Woolly
Woolly
Woolly.db <- vegdist(Woolly, method = "bray")
Woolly.db <- vegdist(Woolly, method = "bray")
Woolly.db <- vegdist(Woolly[,3:49 ], method = "bray")
Woolly.pcoa <- cmdscale(Woolly.db, eig = TRUE, k = 3)
Woolly.pcoa
plainvar1 <- round(Woolly.pcoa$eig[1] / sum(Woolly.pcoa$eig), 3) * 100
plainvar2 <- round(Woolly.pcoa$eig[2] / sum(Woolly.pcoa$eig), 3) * 100
plainvar3 <- round(Woolly.pcoa$eig[3] / sum(Woolly.pcoa$eig), 3) * 100
sum.EigA <- sum(plainvar1, plainvar2, plainvar3)
sum.EigA
#To do ordination, first define plot parameters
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = row.names(Woolly$mortality.class), col = "black")
plainvar1 <- round(Woolly.pcoa$eig[1] / sum(Woolly.pcoa$eig), 3) * 100
plainvar2 <- round(Woolly.pcoa$eig[2] / sum(Woolly.pcoa$eig), 3) * 100
plainvar3 <- round(Woolly.pcoa$eig[3] / sum(Woolly.pcoa$eig), 3) * 100
sum.EigA <- sum(plainvar1, plainvar2, plainvar3)
sum.EigA
#To do ordination, first define plot parameters
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = row.names(Woolly.pcoa$points), col = "black")
Woolly <- read.csv("hf085-01-bird.csv")
Woolly <- Woolly
Woolly
Woolly.db <- vegdist(Woolly[,3:49 ], method = "bray")
Woolly.pcoa <- cmdscale(Woolly.db, eig = TRUE, k = 3)
Woolly.pcoa
plainvar1 <- round(Woolly.pcoa$eig[1] / sum(Woolly.pcoa$eig), 3) * 100
plainvar2 <- round(Woolly.pcoa$eig[2] / sum(Woolly.pcoa$eig), 3) * 100
plainvar3 <- round(Woolly.pcoa$eig[3] / sum(Woolly.pcoa$eig), 3) * 100
sum.EigA <- sum(plainvar1, plainvar2, plainvar3)
sum.EigA
#To do ordination, first define plot parameters
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = row.names(Woolly$mortality.class), col = "black")
fishREL[i, ] = fish[i, ] / sum(fish[i, ])
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = row.names(Woolly.pcoa), col = "black")
?row.names
Woolly <- as.data.frame(Woolly)
Woolly
Woolly.db <- vegdist(Woolly[,3:49 ], method = "bray")
Woolly.pcoa
Woolly <- read.csv("hf085-01-bird.csv")
Woolly <- as.data.frame(Woolly)
Woolly
Woolly.db <- vegdist(Woolly[,3:49 ], method = "bray")
Woolly.pcoa <- cmdscale(Woolly.db, eig = TRUE, k = 3)
Woolly.pcoa
plainvar1 <- round(Woolly.pcoa$eig[1] / sum(Woolly.pcoa$eig), 3) * 100
plainvar2 <- round(Woolly.pcoa$eig[2] / sum(Woolly.pcoa$eig), 3) * 100
plainvar3 <- round(Woolly.pcoa$eig[3] / sum(Woolly.pcoa$eig), 3) * 100
sum.EigA <- sum(plainvar1, plainvar2, plainvar3)
sum.EigA
#To do ordination, first define plot parameters
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = row.names(Woolly.pcoa), col = "black")
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = row.names(Woolly.pcoa$mortality.class), col = "black")
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = row.names(Woolly$mortality.class), col = "black")
Woolly.pcoa$points
sites <- c(1:40)
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = sites, col = "black")
Woolly <- read.csv("hf085-01-bird.csv")
Woolly <- as.data.frame(Woolly)
Woolly
Woolly.db <- vegdist(Woolly[,3:49 ], method = "bray")
Woolly.pcoa <- cmdscale(Woolly.db, eig = TRUE, k = 3)
Woolly.pcoa
plainvar1 <- round(Woolly.pcoa$eig[1] / sum(Woolly.pcoa$eig), 3) * 100
plainvar2 <- round(Woolly.pcoa$eig[2] / sum(Woolly.pcoa$eig), 3) * 100
plainvar3 <- round(Woolly.pcoa$eig[3] / sum(Woolly.pcoa$eig), 3) * 100
sum.EigA <- sum(plainvar1, plainvar2, plainvar3)
sum.EigA
sites <- c(1:40)
#To do ordination, first define plot parameters
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = sites, col = "black")
sites <- c(HA, HA, HA, HB, HB, HB, HB, HB, HB, HB, L, L,
L, L, HB, L, HB, L, L, M, M, M, M, M, M, HA, M,           HA, M, HA, Hb, HA, HA, HB, HA, HA, L, L, L, L)
sites <- c(4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 1, 1,
1, 1, 3, 1, 3, 1, 1, 2, 2, 2, 2, 2, 2, 3, 2,           4, 2, 4, 3, 4, 4, 3, 4, 4, 1, 1, 1, 1)
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = sites, col = "black")
mortality.class <- c(rep("HA", 1:3, 26, 28, 32, 33, 35, 36 ), rep("HB", 4:10, 15, 17, 31, 34), rep("M", 20:25, 27, 29), rep("L", 11:14, 16, 18, 19, 37:40))
adonis(Woolly ~ mortality.class, method = "bray", permutations = 999)
Woolly
adonis(Woolly[,3:49] ~ mortality.class, method = "bray", permutations = 999)
adonis(Woolly[ ,3:49] ~ mortality.class, method = "bray", permutations = 999)
mortality.class <- c(rep("HA", 10 ), rep("HB", 10), rep("M", 10), rep("L", 10))
adonis(Woolly[ ,3:49] ~ mortality.class, method = "bray", permutations = 999)
mortality.class <- mortality.class <- c(rep("HA", 1:3, 26, 28, 32, 33, 35, 36 ), rep("HB", 4:10, 15, 17, 31, 34), rep("M", 20:25, 27, 29), rep("L", 11:14, 16, 18, 19, 37:40))
adonis(Woolly[ ,3:49] ~ mortality.class, method = "bray", permutations = 999)
Woolly <- read.csv("hf085-01-bird.csv")
Woolly <- as.data.frame(Woolly)
Woolly
Woolly.db <- vegdist(Woolly[,3:49 ], method = "bray")
Woolly.pcoa <- cmdscale(Woolly.db, eig = TRUE, k = 3)
Woolly.pcoa
Woolly
Woolly <- read.csv("hf085-01-bird.csv")
Woolly <- as.data.frame(Woolly)
Woolly
Woolly <- read.csv("hf085-01-bird.csv")
Woolly <- as.data.frame(Woolly)
Woolly
sites <- c(rep("HA", 10), rep("HB", 11), rep("L", 11), rep("M", 8)
sites <- c(rep("HA", 10), rep("HB", 11), rep("L", 11), rep("M", 8))
sites <- c(rep("HA", 10), rep("HB", 11), rep("L", 11), rep("M", 8))
Woolly <- read.csv("hf085-01-bird.csv")
Woolly <- as.data.frame(Woolly)
Woolly
Woolly.db <- vegdist(Woolly[,3:49 ], method = "bray")
Woolly.pcoa <- cmdscale(Woolly.db, eig = TRUE, k = 3)
Woolly.pcoa
Woolly
plainvar1 <- round(Woolly.pcoa$eig[1] / sum(Woolly.pcoa$eig), 3) * 100
plainvar2 <- round(Woolly.pcoa$eig[2] / sum(Woolly.pcoa$eig), 3) * 100
plainvar3 <- round(Woolly.pcoa$eig[3] / sum(Woolly.pcoa$eig), 3) * 100
sum.EigA <- sum(plainvar1, plainvar2, plainvar3)
sum.EigA
sites <- c(rep("HA", 10), rep("HB", 11), rep("L", 11), rep("M", 8))
#To do ordination, first define plot parameters
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = sites, col = "black")
adonis(Woolly[ ,3:49] ~ sites, method = "bray", permutations = 999)
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = sites, col = "black")
par(mar = c(5,5,1,2) + 0.1)
#Then, initiate plot
plot(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[,2], ylim = c(-0.2, 0.7),
xlab = paste("PCoA 1 (", plainvar1, "%)", sep = ""),
ylab = paste("PCoA 2 (", plainvar2, "%)", sep = ""),
pch = 16, cex = 2.0, type = "n", cex.lab = 1.5, cex.axis = 1.2, axes = FALSE)
#Add axes
axis(side = 1, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
axis(side = 2, labels = T, lwd.ticks = 2, cex.axis = 1.2, las = 1)
abline(h = 0, v = 0, lty = 3)
box(lwd = 2)
#Add points and labels
points(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
pch = 19, cex = 3, bg = "gray", col = "gray")
text(Woolly.pcoa$points[ ,1], Woolly.pcoa$points[ ,2],
labels = sites, col = "black")
Jelly <- read.csv("JellyBeanSampleData.csv")
Jelly <- as.data.frame(Jelly)
Site <- c(rep("A", 5), rep("B", 4))
adonis(Jelly ~ Site, method = "bray", permutations = 999)
Jelly <- read.csv("JellyBeanSampleData.csv")
Jelly <- as.data.frame(Jelly)
Jelly
Site <- c(rep("A", 5), rep("B", 4))
adonis(Jelly ~ Site, method = "bray", permutations = 999)
str(fish)
str(Jelly)
Jelly <- sapply(Jelly, as.numeric)
Jelly
str(Jelly)
str(fish)
Jelly <- as.data.frame(Jelly)
str(Jelly)
str(Jelly)
str(fish)
Jelly <- read.csv("JellyBeanSampleData.csv")
Jelly <- as.data.frame(Jelly)
Jelly
Site <- c(rep("A", 5), rep("B", 4))
adonis(Jelly[3:28] ~ Site, method = "bray", permutations = 999)
